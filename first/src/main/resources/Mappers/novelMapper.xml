<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.home.first.mapper.novelMapper">
	
	<select id="novelProfile" resultType="com.home.first.dto.NovelProfileDto" parameterType="hashmap">
		SELECT
			novel_title_idx,
			novel_nickname,
			novel_title,
			novel_id,
			novel_img_name,
			novel_img_size,
			novel_visibility
		FROM
			profilenovel
		WHERE
			novel_id = #{novel_id} AND novel_title = #{novel_title}
	</select>
	
	<select id="novelProfileByMo" resultType="com.home.first.dto.NovelProfileDto" parameterType="int">
		SELECT
			novel_title_idx,
			novel_nickname,
			novel_title,
			novel_id,
			novel_img_name,
			novel_img_size,
			novel_visibility,
			novel_date
		FROM
			profilenovel
		WHERE
			novel_title_idx = #{novel_title_idx}
	</select>
	
	<select id="novelListByVi" resultType="com.home.first.dto.NovelProfileDto">
		SELECT
			*
		FROM
			profilenovel
		WHERE
			novel_visibility = 1
		GROUP BY
			novel_title
		ORDER BY
			novel_date DESC limit 0, 5
	</select>
	
	<select id="novelListByid" resultType="com.home.first.dto.NovelProfileDto" parameterType="hashmap">
		SELECT
			*
		FROM
			profilenovel
		WHERE
			novel_id = #{novel_id}
		GROUP BY
			novel_title
		ORDER BY
			novel_title_idx DESC limit #{offset}, #{noOfRecords}
	</select>
	
	<select id="novelListByViForHit" resultType="com.home.first.dto.NovelDto" parameterType="hashmap">
		SELECT
			novel_idx,
			novel_title,
			novel_id,
			novel_content,
			novel_date,
			novel_chapter,
			sum(novel_hit) as novel_hit,
			novel_visibility,
			novel_subtitle
		FROM
			(SELECT * FROM novel WHERE novel_visibility = 1) AS a
		GROUP BY
			novel_title
		ORDER BY
			sum(novel_hit) DESC limit #{offset}, #{noOfRecords}
	</select>
	<select id="novelByVi" resultType="com.home.first.dto.NovelDto" parameterType="hashmap">
		SELECT
			*
		FROM
			novel
		WHERE
			novel_visibility = 1
		GROUP BY
			novel_title
		ORDER BY
			novel_date DESC limit #{offset}, #{noOfRecords}
	</select>
	
	<select id="novelListByDesc" resultType="com.home.first.dto.NovelDto" parameterType="hashmap">
		SELECT
			*
		FROM
			novel
		WHERE
			novel_title = #{novel_title} AND novel_id = #{novel_id}
		ORDER BY
			novel_idx DESC limit #{offset}, #{noOfRecords}
	</select>
	
	<select id="novelListByTl" resultType="com.home.first.dto.NovelDto" parameterType="hashmap">
		SELECT
			max(novel_idx) as novel_idx,
			novel_title,
			novel_id,
			max(novel_date) as novel_date,
			max(novel_chapter) as novel_chapter,
			novel_visibility
		FROM
			novel
		WHERE
			novel_id = #{novel_id} 
		GROUP BY
			novel_title
		ORDER BY
			novel_idx DESC limit #{offset}, #{noOfRecords}
	</select>
	
	<select id="readNovelByIdx" parameterType="int" resultType="com.home.first.dto.NovelDto">
		SELECT
			*
		FROM
			novel
		WHERE
			novel_idx = #{novel_idx}
	</select>
	
	<select id="novelCount" resultType="int" parameterType="String">
		SELECT 
			count(*)
		FROM
			novel
		WHERE
			novel_title = #{novel_title}	
	</select>
	
	<select id="novelListCount" resultType="int">
		SELECT
			count(c.novel_title)
		FROM(
			SELECT 
				novel_title
			FROM
				novel
			GROUP BY
				novel_title
			) AS c
	</select>
	<select id="novelHitSum" resultType="int" parameterType="hashmap">
		SELECT
			SUM(novel_hit)
		FROM
			novel
		WHERE
			novel_id = #{novel_id} AND novel_title = #{novel_title}
	</select>
	<select id="novelSearch" parameterType="hashmap" resultType="com.home.first.dto.NovelDto">
		SELECT
			*	
		FROM
			novel
		WHERE
			novel_title like CONCAT('%',#{text},'%') OR novel_id like CONCAT('%',#{text},'%')
		ORDER BY
			novel_idx DESC limit #{offset}, #{noOfRecords}
	</select>
	<select id="novelSearchCount" parameterType="String" resultType="int">
		SELECT
			count(*)	
		FROM
			novel
		WHERE
			novel_title like CONCAT('%',#{text},'%') OR novel_id like CONCAT('%',#{text},'%')
	</select>
	<insert id="createNovel" parameterType="com.home.first.dto.NovelDto">
		INSERT INTO novel(
			novel_title,
			novel_id,
			novel_content,
			novel_chapter,
			novel_visibility,
			novel_subtitle
		)VALUES(
			#{novel_title},
			#{novel_id},
			#{novel_content},
			#{novel_chapter},
			#{novel_visibility},
			#{novel_subtitle}
		)
	</insert>
	
	<insert id="createNovelProfile" parameterType="com.home.first.dto.NovelProfileDto">
		INSERT INTO profilenovel(
			novel_nickname,
			novel_title,
			novel_id,
			novel_img_name,
			novel_img_size,
			novel_visibility
		)VALUES(
			#{novel_nickname},
			#{novel_title},
			#{novel_id},
			#{novel_img_name},
			#{novel_img_size},
			#{novel_visibility}
		)
	</insert>
	
	<update id="updateNovel" parameterType="int">
		UPDATE
			novel
		SET
			novel_content,
			novel_date,
			novel_chapter
		WHERE
			novel_idx = #{novel_idx};	
	</update>
	
	<update id="updateForVi" parameterType="hashmap">
		UPDATE
			novel
		SET
			novel_visibility = #{novel_visibility}
		WHERE
			novel_id = #{novel_id} AND novel_title = #{novel_title}
	</update>
	
	<update id="updateForProVi" parameterType="hashmap">
		UPDATE
			profilenovel
		SET
			novel_visibility = #{novel_visibility}
		WHERE
			novel_id = #{novel_id} AND novel_title = #{novel_title}
	</update>
	
	<update id="updateProfile" parameterType="com.home.first.dto.NovelProfileDto">
		UPDATE
			profilenovel
		SET
			novel_visibility = #{novel_visibility}
		WHERE
			novel_id = #{novel_id} AND novel_title = #{novel_title}
	</update>
	
	<update id="updateProfileByMo" parameterType="com.home.first.dto.NovelProfileDto">
		UPDATE
			profilenovel
		SET
			novel_nickname  = #{novel_nickname},
			novel_title  = #{novel_title},
			novel_img_name  = #{novel_img_name},
			novel_img_size  = #{novel_img_size},
			novel_visibility = #{novel_visibility}
		WHERE
			novel_title_idx = #{novel_title_idx}
	</update>
	
	<delete id="deleteNovel" parameterType="int">
		DELETE FROM 
			novel
		WHERE 
			novel_idx = #{novel_idx};	
	</delete>
	
	<delete id="deleteNovelByTl" parameterType="String">
		DELETE FROM 
			novel
		WHERE 
			novel_title = #{novel_title};	
	</delete>
</mapper>